name: Run MicroPython Tests

on:
  push:
    branches:
      - '**' # Trigger on any branch push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image exists
        id: check_image
        run: |
          IMAGE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://ghcr.io/v2/${{ github.repository_owner }}/micropython-unix-rp2-tests/manifests/latest")
          echo "IMAGE_EXISTS=$IMAGE_EXISTS" >> $GITHUB_ENV

      - name: Check for changes in Dockerfile
        id: check_changes
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"
          if echo "$CHANGED_FILES" | grep -q 'Dockerfile'; then
            echo "Dockerfile has changed"
            echo "dockerfile_changed=true" >> $GITHUB_ENV
          else
            echo "Dockerfile has not changed"
            echo "dockerfile_changed=false" >> $GITHUB_ENV
          fi

#      - name: Build and push Docker image
#        if: env.IMAGE_EXISTS != '200' || env.DOCKERFILE_CHANGED == 'true'
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ghcr.io/${{ github.repository_owner }}/micropython-unix-rp2-tests:latest
#
#      - name: Pull existing Docker image
#        if: env.IMAGE_EXISTS == '200' && env.DOCKERFILE_CHANGED == 'false'
#        run: |
#          docker pull ghcr.io/${{ github.repository_owner }}/micropython-unix-rp2-tests:latest
#
#      - name: Install unittest via MIP
#        run: |
#          docker run --rm -v $(pwd)/lib:/root/.micropython/lib ghcr.io/${{ github.repository_owner }}/micropython-unix-rp2-tests:latest micropython -m mip install unittest
#
#      - name: Install dependencies via MIP
#        run: |
#          deps=$(jq -r '.deps[] | "\(.[0])@\(.[1])"' package.json)
#          echo "$deps" | xargs -n 1 -I {} docker run --rm -v $(pwd)/lib:/root/.micropython/lib ghcr.io/${{ github.repository_owner }}/micropython-unix-rp2-tests:latest micropython -m mip install {}
#
#      - name: Run tests
#        run: |
#          docker run --rm -v $(pwd):/code -v $(pwd)/lib:/root/.micropython/lib ghcr.io/${{ github.repository_owner }}/micropython-unix-rp2-tests:latest micropython test.py